Grammar

    0 $accept: input $end

    1 input: /* empty */
    2      | exp

    3 exp: INTEGER_LITERAL
    4    | exp PLUS exp
    5    | exp MULT exp


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER_LITERAL (258) 3
PLUS (259) 4
MULT (260) 5


Nonterminals, with rules where they appear

$accept (6)
    on left: 0
input (7)
    on left: 1 2, on right: 0
exp (8)
    on left: 3 4 5, on right: 2 4 5


State 0

    0 $accept: . input $end

    INTEGER_LITERAL  shift, and go to state 1

    $default  reduce using rule 1 (input)

    input  go to state 2
    exp    go to state 3


State 1

    3 exp: INTEGER_LITERAL .

    $default  reduce using rule 3 (exp)


State 2

    0 $accept: input . $end

    $end  shift, and go to state 4


State 3

    2 input: exp .
    4 exp: exp . PLUS exp
    5    | exp . MULT exp

    PLUS  shift, and go to state 5
    MULT  shift, and go to state 6

    $default  reduce using rule 2 (input)


State 4

    0 $accept: input $end .

    $default  accept


State 5

    4 exp: exp PLUS . exp

    INTEGER_LITERAL  shift, and go to state 1

    exp  go to state 7


State 6

    5 exp: exp MULT . exp

    INTEGER_LITERAL  shift, and go to state 1

    exp  go to state 8


State 7

    4 exp: exp . PLUS exp
    4    | exp PLUS exp .
    5    | exp . MULT exp

    MULT  shift, and go to state 6

    $default  reduce using rule 4 (exp)


State 8

    4 exp: exp . PLUS exp
    5    | exp . MULT exp
    5    | exp MULT exp .

    $default  reduce using rule 5 (exp)
