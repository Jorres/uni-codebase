Разрешимый язык - выдавать 0 или 1, определяет принадлежность за конечное время всегда 

Перечислимый язык - по i выдать элемент p(i) ИЛИ в бесконечном цикле выводить элементы языка
    // конструктивно можно избавиться от повторений в этом цикле, просто написать программу-обертку с сетом

Полуразрешимый язык - для него существует программа, выдающая 1 если принадлежит, и зависающая в противном случае

Перечислимый <==> Полуразрешимый, конструктивно
 => по перечислителю построить полуразрешитель
    ну, перебирать элементы списка и сравнивать. Если он лежит в списке на позиции i, то за конечное время выдаст 1
 <= по полуразрешителю построить перечислитель
    хитрая конструкция про
        for TL = 1 to inf
            for n = 1 to TL
                if (f(n)|TL) == 1
                    print n

Разрешимый <=> перечислимый он, и перечислимый его дополнение
    

 <= let p - полуразрешитель L, q - полуразрешитель not L
    for TL = 1 to inf
        if (p(n)|TL = 1) 
            return 1
        if (q(n)|TL = 1) 
            return 0

 => построить по разрешителю два полуразрешителя элементарно

А бывают полуразрешимые, но не разрешимые?
    Язык HALT - программа, зависающая на каких-то там входах
    как показать, что он неразрешимый? попробуем предположить разрешимость (существование программы) и придти к противоречию
    // тут потом будет доказательство может быть
    Мем - статически анализировать ход исполнения программы по коду невозможно
